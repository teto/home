#+title: nix tips

* how to require a proprietary file ?

`requireFile`



** Contributing to nix itself

autoreconfPhase
configurePhase
make tests/functional/flakes/show.sh.test

* the registry (!)

the only way to avoid a redownload of the global registry is to pass --flake-registry ''


* find why 

nix why-depends --all /nix/var/nix/profiles/system /etc/profiles/per-user/teto/bin/luarocks 
  #+BEGIN_SRC shell
/nix/store/p1b9zgvb1s9vrhrfw18cqprpjjbdvdda-nixos-system-mcoudron-25.05.20250205.e2fe8f7
└───/nix/store/m3z5vgybyfgmzmjgc1dmx6n8mfla3wdm-etc
    ├───/nix/store/573mj57k7qfjpsyybd3f2685d4ysrj2d-user-environment
    │   └───/nix/store/fmwbpr67w6vhsk9mxwx3h0bpnx8bk483-home-manager-path
    └───/nix/store/9mnfciykxxlqc04prkj64k232y1kniir-system-units
        ├───/nix/store/6h5lx52s276i85jxi0l2yrdb2s3my3bg-unit-home-manager-teto.service
        │   └───/nix/store/pbzw290082a39wkid903bvxcv52ws4ic-home-manager-generation
        │       ├───/nix/store/fmwbpr67w6vhsk9mxwx3h0bpnx8bk483-home-manager-path
        │       └───/nix/store/9ggz564lxs9fy8pwysz74434fzl965cj-home-manager-files
        │           └───/nix/store/prfcmraxpcjd6hbvmgya4amvb1hx45bg-hm_fontconfigconf.d10hmfon>
        │               └───/nix/store/fmwbpr67w6vhsk9mxwx3h0bpnx8bk483-home-manager-path
        └───/nix/store/i94xrzbjh9p7x6cz9ymkwrc4y45kz9rv-unit-greetd.service
            └───/nix/store/i1h7xn0ppf2m5s2fhmwgp3a4xgg8mw76-greetd.toml
                └───/nix/store/fmwbpr67w6vhsk9mxwx3h0bpnx8bk483-home-manager-path
  #+END_SRC

* how to package npm packages ?

  https://github.com/nix-community/dream2nix


* du --human-readable --total --summarize $(nix-store --query --requisites $(echo $store_paths)) > >(sort --human-numeric-sort)

* How to interpret the progress bar ?

  See https://github.com/nixos/nix/issues/3352

* how to check if package is in cache ? 

see https://nixos.wiki/wiki/Binary_Cache:
nix path-info -r /nix/store/sb7nbfcc1ca6j0d0v18f7qzwlsyvi8fz-ocaml-4.10.0 --store https://cache.nixos.org/

* about flakes
** how to build a nixosConfiguration 

   #+BEGIN_SRC shell
  nix build .#nixosConfigurations.staging.config.system.build.toplevel
  #+END_SRC

# nixos/modules/programs/environment.nix
environment.profileRelativeSessionVariables =

** set local paths for flake inputs



 url = "git+file:/home/teto/jupyenv";

https://github.com/NixOS/nixpkgs/pull/185719

  ** how to autoupdate one's script

   nix-shell maintainers/scripts/update.nix --argstr path luarocks-nix
   nix-shell maintainers/scripts/update.nix --arg maintainer teto
 
 nix profile diff-closures --profile /nix/var/nix/profiles/system
 nix flake add mine /home/teto/nixpkgs
 nix print-dev-env --profile /path/to/profile/to/creat
 
 ** Prevent garbage collection of nix develop environment ?
   #+begin_src shell
 nix develop --profile toto
 #+end_src
 --profile works with nix develop too
 
 https://gist.github.com/edolstra/40da6e3a4d4ee8fd019395365e0772e7
 
 --no-net
 
 mount -o remount,rw /nix/store
 chown -R root:root /nix/store
 
 NIX_SSHOPTS to pass additional ssh flags to nix
 
 
 # builders
 nixpkgs-review pr 176375 --build-args="--substituters '' --option builders \"$NOVA_RUNNER3\" "
 
 set "--post-build-hook true" to skip it.
 
 Limit bandwidth
  CURLOPT_MAX_RECV_SPEED_LARGE
 
 Remote builds: https://nixos.wiki/wiki/Distributed_build
 
 https://discourse.nixos.org/t/remote-builders-operation-addtostore-is-not-supported-by-store/2115/2
 env NIX_REMOTE='ssh-ng://my.machine?compress=true' nix-build
 
 find reverse dependencies
 nix-store --query --referrers $(which xdg-mime)
 
 Mention `--max-jobs 0` to build remotely only
 
 * how to iterate on nix repl ?

 ```
 :a (import ./test.nix { inherit lib linkFarm;}) 
 :r 
 ```
 
 CURL_TRACE 
 
# human readable output of closure size
nix path-info -Sh $(nix-build ./shell.nix -A inputDerivation)
 
 
 # Nix paths I keep forgetting
 - /nix/var/nix/profiles/default (nix-env root profile)
 
 # NixOS paths I keep forgetting
 - /nix/var/nix/profiles/system 
 - /run/current-system/sw/bin/
 - /var/run/booted-system
 
 # install haskell packages from certian version
 nix-shell -p haskell.packages.ghc865.stack
 
 
 # Get information about nix-shell
 
 # nix path-info -Ssh $(nix-build ./shell.nix -A inputDerivation)
 nix path-info -Sshr $(nix-build ./shell.nix -A inputDerivation) | sort -k3 -h | wc -l
 
 
 # maintainers scripts
 ./maintainers/scripts/rebuild-amount.sh --print HEAD
 
 
 # remote builds 
 
 You need to be a trusted user:
 To select a builder you can run something akin to:
 `nix-build local-integration.nix -A osx.lb_database.build  -I nixpkgs=channel:nixos-18.03 --builders "root@spud x86_64-darwin /home/amine/.ssh/id_rsa 1 1 darwin-playground,LB,any,perf " --option cores 4`
 
 
 # how to reinstall the bootloader
 See https://www.reddit.com/r/NixOS/comments/ouxjzh/how_to_reinstall_bootloader/
 sudo NIXOS_INSTALL_BOOTLOADER=1 /nix/var/nix/profiles/system/bin/switch-to-configuration boot
 
 # how to regen the nixos doc:
 $  ./nixos/doc/manual/md-to-db.sh
 
 * cross building

 For instance to build for another architecture
 
 nix-build -A pkgsCross.aarch64-android.neovim

  with flakes, one should use legacyPackages

 nix build nixpkgs#legacyPackages.x86_64-linux.pkgsCross.aarch64-multiplatform.neovim

 # nix shell 
 
 does not execute hooks !

* nixpkgs-review

Pass `--build-args "--option substituters https://cache.nixos.org/"` for extra config
  --extra-nixpkgs-config '{ allowUnfree = false; }'
