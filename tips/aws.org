`When you use an endpoint with no Region, AWS routes the Amazon EC2 request to US East (N. Virginia) (us-east-1), which is the default Region for API calls. `

** Environment variables of interest
 
   https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html
   export AWS_PROFILE=
   export AWS_ACCESS_KEY_ID=RoleAccessKeyID
   export AWS_SECRET_ACCESS_KEY=RoleSecretKey
   export AWS_SESSION_TOKEN=RoleSessionToken
   unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN

   AWS_CONFIG_FILE (can't be specified on CLI)
   export AWS_SHARED_CREDENTIALS_FILE

 AWS Security Token Service (AWS STS) 

ARN= Amazon Resource Name

* policies
In AWS, managed policies (attached to roles, users, or groups) do not define who can assume the role or access the resources. Instead, they define what actions are allowed or denied. The Principal element is only used in trust policies or resource-based policies, not in attached policies.


Excerpt
You can attach an identity-based policy to a user group so that all of the users in the user group receive the policy's permissions. You cannot identify a user group as a Principal in a policy (such as a resource-based policy) because groups relate to permissions, not authentication, and principals are authenticated IAM entities. For more information about policy types, see Identity-based policies and resource-based policies.

Short-term credentials consist of three parts: Access key ID, secret access key, and a security token. The access key ID for short-term credentials will always start with the prefix ‘ASIA’, 

 # s3 
 
 How to download files with a pattern
 https://stackoverflow.com/questions/38834708/how-can-i-use-wildcards-to-cp-a-group-of-files-with-the-aws-cli
 e.g. `aws s3 cp s3://data/ . --recursive --exclude "*" --include "2016-08*"`
 
 
 aws --debug
 --endpoint-url

 s3.eu-central-1.amazonaws.com
 
 `aws --profile=nix-daemon s3 ls`
 
 
 aws sts get-caller-identity
 
 aws s3api get-bucket-location --profile jinko-dev --bucket jinko-dev-shared
 
 # https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html

 #+BEGIN_SRC shell
aws eks update-kubeconfig --name jk-preprod --profile nova-jinko --user-alias jk-preprod
aws eks update-kubeconfig --name jk-dev --profile nova-sandbox --user-alias jk-dev
 #+END_SRC shell
 
 
 # Lambda
 aws lambda list-functions --query '[Functions[].[FunctionName,FunctionArn]]'
 
 Unable to decode Context from event response.
 
 
 # URL lists
 
 
 Region -> Url
 Paris => https://s3.eu-west-3.amazonaws.com
 Frankfurt => s3-eu-central-1.amazonaws.com
 
 aws s3api list-objects-v2 --bucket "XXX" --query "Contents[?LastModified>='2021-10-01'].{Key: Key}" --output text --profile nova-devops| xargs -n1 -P10 -t -I 'KEY' aws s3 rm s3://devops-xxx/'KEY' --profile nova-devops
 
 
 # openvpn configuration
 https://docs.aws.amazon.com/fr_fr/AmazonElastiCache/latest/mem-ug/accessing-elasticache.html
 https://superuser.com/questions/457020/openvpn-only-route-a-specific-ip-addresses-through-vpn
 
* roles
aws iam list-roles
role chaining
--transitive-tag-keys
aws sts assume-role --role-arn "arn:aws:iam::REDACTED:role/cirunner_dev_deploy" --profile nova-sandbox --role-session-name toto

From the output:
export AWS_ACCESS_KEY_ID=RoleAccessKeyID
export AWS_SECRET_ACCESS_KEY=RoleSecretKey
export AWS_SESSION_TOKEN=RoleSessionToken
unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN

aws configure get aws_access_key_id --profile myprofile
aws configure get aws_secret_access_key --profile myprofile
aws configure get aws_session_token --profile myprofile

* EC2

to get the instance user data, you can try the describe instance attribute
aws ec2 describe-instance-attribute --instance-id <InstanceID> --attribute userData
