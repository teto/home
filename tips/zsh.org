#+title: zsh tips 


* autocompletion

to read about completion:
man zshcompsys

basically it goes through fpath, looks at files starting with _, and looks at the first line. It should start with `#compdef` else it's ignored ?
#compdef foobar =>  the file contains code for completing the foobar command.

You can also use the compdef command directly (e.g. in your ~/.zshrc file) to tell zsh which function to use for completing a command like this:

The uppercase FPATH is a string which contains a colon-separated list of directories. The lowercase fpath is an array of directories.
Changing one affects the other !

The zstyle command itself is documented in the zshmodule man page. The styles values are documented in the zshcompsys and zshcompwid 
To skip the cache compinit -D

 The  function  `bashcompinit` provides compatibility with bash's programmable completion system.  When run it will define the functions, compgen and complete which correspond to the bash
       builtins with the same names.  It will then be possible to use completion specifications and functions written for bash.

* find provenance of function
` whence -v jk-env`
or
`functions -u jk-env` to see where it comes from

* merge histories

To load history from file:
builtin fc -R -I "$hist_file_1"

SHARE_HISTORY

Flush history / HIST_FILE
builtin fc -W "$hist_file_merged"

zsh --help shows different commands:


https://unix.stackexchange.com/questions/74184/how-to-save-current-command-on-zsh

push-line mapping

* debug zsh 
  zsh -lxv to debug

* bypass local config

  zsh -f <=> --no-rcs => disable local config
  -d disables global config

* test

"zle -N" Create a user-defined widget.  If there is already a widget with the specified name, it is overwritten

zle -al lists all registered widgets

echo $widgets[accept-line]

you can run zsh -f. If you want to skip system configuration files but run the per-user files, run zsh -d.

zsh/zleparameter

https://zsh.sourceforge.io/Doc/Release/User-Contributions.html#Manipulating-Hook-Functions


* List hooks

  zshaddhistory

`source ~/.config/zsh/zhooks.plugin.zsh` then run `zhooks`
`add-zsh-hook -L [HOOK]`

add-zsh-hook -d preexec [existing_function_name]


To remove registered preexec function
add-zsh-hook -D preexec set_term_title

* completion

zstyle -L 
https://zsh.sourceforge.io/Doc/Release/Completion-System.html
When compinit is run, it searches all such files accessible via fpath/FPATH and reads the first line of each of them. This line should contain one of the tags described below. Files whose first line does not start with one of these tags are not considered to be part of the completion system and will not be treated specially.

#compdef simwork.core-webservice.local =

Might be 
