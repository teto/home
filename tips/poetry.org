
# poetry2nix

```
nix shell github:nix-community/poetry2nix#poetry2nix
# to generate the nix overlay:
poetry2nix lock --lock=/home/teto/nova/jinko-platform/poetry.lock
```



replace .venv with your project's env path

Le nom du package dans l'overlay c'est celui visible dans le fichier lock.

poetry env info -p

pyProject = readTOML pyproject;
poetryLock = readTOML poetrylock;


https://python-poetry.org/docs/pyproject/#packages

# how to generate a setup.py
https://github.com/python-poetry/poetry/issues/761#issuecomment-695829120

to debug
poetry env list --full-path
> /home/teto/.cache/pypoetry/virtualenvs/jino-platform-x7nkyLjP-py3.7

to compare with `pipenv where`
/root/.local/share/virtualenvs/-x-v5uFv0

# poetry and nix
mkPoetryEnv returns a withPackages()
