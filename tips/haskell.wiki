CABAL_HELPER_DEBUG=1

cabal haddock --haddock-executables

# How to convert between Text/String/ByteString
import Data.Text.Encoding
https://stackoverflow.com/questions/3232074/what-is-the-best-way-to-convert-string-to-bytestring
https://gist.github.com/dino-/28b09c465c756c44b2c91d777408e166

## string <-> Bytestring
BLU.toString   :: BL.ByteString -> String
BLU.fromString :: String -> BL.ByteString
lazyByteString = BLU.fromString "lazyByteString ä ß"

>>= vs >>
>> will discard the returned value
    removeSubflow socket token >>= inspectAnswers >> putStrLn "Finished announcing"

ghc-pkg -f /home/teto/netlink-hs find-module System.Linux.Netlink

pour savoir d'ou le pkg est importe:
	ghc-pkg find-module System.Linux.Netlink

Fun website
https://haskell-code-explorer.mfix.io/package/optparse-applicative-0.14.2.0/show/Options/Applicative/BashCompletion.hs

in ghci :
:show paths

Generate database with:
$ ghc-pkg -v -f /home/teto/netlink-hs  recache


How to configure cabal ?
https://www.haskell.org/cabal/users-guide/installing-packages.html
$ cabal user-config update

see https://wiki.haskell.org/FAQ#How_can_I_get_a_stack_backtrace_when_my_program_throws_an_exception.3F

    -- -fno-warn-unused-imports 
    -- -fforce-recomp  makes it build twice on nixos
    ghc-options: -Wall -fno-warn-unused-binds -fno-warn-unused-matches -threaded -fprof-auto -rtsopts

AWSInfo{..} = RecordWildCards

# to disable errors
{-# OPTIONS_GHC -fno-warn-orphans #-}

# to select only some fields in a record: RecordWildCards
record{..} will bring everything intoScope
A better alternative is (tcpInfo@DiagTcpInfo {} )


# acronyms
NT = natural transformation


# how to debug timing

-ddump-timings


# 
cabal haddock --executables

# Lenses
~. -> view

# Debug
https://wiki.haskell.org/Debugging
Recent versions of GHC allow a dump of a stack trace (of all cost centres) when an exception is raised. In order to enable this, compile with -prof, and run with +RTS -xc
import Debug.Trace
traceShow / traceId


# Frames

inCoreSoA
AoS = Array of Structures

# Multiline strings
        colNames = "age, workclass, fnlwgt, education, education-num, \
                   \marital-status, occupation, relationship, race, sex, \
                   \capital-gain, capital-loss, hours-per-week, \
                   \native-country\n"

# Template Haskell
(the double tick indicates we want the name of the type, not the type itself).


data ElField (field :: (Symbol, Type)) where
with constructor 'Field'
https://hackage.haskell.org/package/vinyl-0.13.0/docs/Data-Vinyl-Functor.html#t:ElField

# polysemy
Effects which don't make use of the m parameter are known as "first-order effects."
