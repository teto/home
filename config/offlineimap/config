# vim: set noet fdm=marker fenc=utf-8 ff=unix sts=0 sw=4 ts=4 :
[general]
accounts = gmail
maxsyncaccounts= 4
socktimeout = 10
pythonfile = $XDG_CONFIG_HOME/offlineimap/get_settings.py

metadata = $XDG_DATA_HOME/offlineimap
# choose one from machineui, blinkenlights, quiet, ttyui, basic
ui = ttyui

[mbnames]
#generate mailboxes file for mutt
enabled = yes
filename = $XDG_CONFIG_HOME/mutt/mailboxes
header = "mailboxes *\nmailboxes !\n"
peritem = mailboxes =%(accountname)s/%(foldername)s
sep = "\n"
footer = "\n"


[Account iij] # {{{
localrepository = iij-local
remoterepository = iij-remote
maxage=10
# presynchook=imapfilter
# TODO notify user run a script that will launch tag
postsynchook=notmuch --config=$XDG_CONFIG_HOME/notmuch/notmuchrc_pro new

[Repository iij-local]
type = Maildir
localfolders = ~/maildir/iij

[Repository iij-remote]
type = IMAP
# imap-tyo.iiji.jp
# imap911.iiji.jp
remotehost = imap-tyo.iiji.jp
# ssl=yes
remoteuser = coudron@iij.ad.jp
realdelete = no
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
# on gmail just remove tags, you really need to move files to trash folder
maxconnections = 3
# }}}

[Account gmail]# {{{
localrepository = gmail-local
remoterepository = gmail-remote
# interval between updates (in minutes)
autorefresh=0
# in bytes
maxsize=2000000
# in daysA
maxage=10
synclabels= yes
# presynchook=imapfilter
# TODO notify user
postsynchook= notmuch --config=$XDG_CONFIG_HOME/notmuch/notmuchrc new
# labelsheader = X-Keywords

[Repository gmail-local]
type = GmailMaildir
localfolders = ~/maildir/gmail

[Repository gmail-remote]
type = Gmail
remoteusereval = get_pass("gmail", "login")
remotepasseval = get_pass("gmail", "password")
realdelete = yes
maxconnections = 3
ssl= yes
sslcacertfile= /etc/ssl/certs/ca-certificates.crt
# newer offlineimap > 6.5.4 needs this
# cert_fingerprint = 89091347184d41768bfc0da9fad94bfe882dd358
# name translations would need to be done in both repositories, but reverse
#nametrans = lambda foldername: foldername.replace('bar', 'BAR')
# prevent sync with All mail folder since it duplicates mail
folderfilter = lambda foldername: foldername not in ['[Gmail]/All Mail','[Gmail]/Spam','[Gmail]/Important']


# }}}
