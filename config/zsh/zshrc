# vim: set noet fenc=utf-8 ff=unix  sts=0 sw=4 ts=8 foldmethod=marker :

# check we are on nixos
#########################################
# true if file exists, aka if we are on nixos
# test ! -f /etc/NIXOS
# ON_NIXOS=$?
# prompt off

current_folder="${0:a:h}"
. "$ZDOTDIR/aliases.zsh"

# export PATH="${XDG_DATA_HOME}/../bin:$PATH"
# notifies when long command finishes
# zbell should recognize aliases
# zbell_ignore=("$EDITOR" "$PAGER" v)

# zsh.enableSuggestions right handside color
# see https://github.com/zsh-users/zsh-autosuggestions for suggestions
# AUTOSUGGESTION_HIGHLIGHT_COLOR="fg=cyan"

# TODO make it a function cat some.json | python -m json.tool

# History parameters {{{

# make some commands not show up in history
# export HISTIGNORE="ls:ll:cd -:pwd:exit:date"

# multiple zsh sessions will append to the same history file (incrementally, after each command is executed)
# setopt inc_append_history
setopt hist_expire_dups_first # purge duplicates first
setopt hist_ignore_dups # Do not write events to history that are duplicates of previous events
# setopt hist_find_no_dups # When searching history don't display results already cycled through twice
# setopt hist_reduce_blanks # Remove extra blanks from each command line being added to history
setopt hist_verify # don't execute, just expand history
setopt share_history # imports new commands and appends typed commands to history
# }}}
# Zsh options {{{1
setopt beep # (no_)beep don't beep on error
setopt interactive_comments # Allow comments even in interactive shells (especially for Muness)

# ===== Changing Directories
setopt auto_cd
setopt cdablevarS # if argument to cd is the name of a parameter whose value is a valid directory, it will become the current directory
# setopt pushd_ignore_dups # don't push multiple copies of the same directory onto the directory stack

# ===== Expansion and Globbing
#setopt noextended_glob # treat #, ~, and ^ as part of patterns for filename generation


# ===== Completion
setopt always_to_end # When completing from the middle of a word, move the cursor to the end of the word
setopt auto_menu # show completion menu on successive tab press. needs unsetop menu_complete to work
setopt auto_name_dirs # any parameter that is set to the absolute name of a directory immediately becomes a name for that directory
setopt complete_in_word # Allow completion from within a word/phrase

setopt dotglob # add hidden files to glob results

unsetopt menu_complete # do not autoselect the first completion entry

# ===== Correction
#setopt correct # spelling correction for commands
#setopt correctall # spelling correction for arguments

# Prompt {{{2
# setopt prompt_subst # Enable parameter expansion, command substitution, and arithmetic expansion in the prompt
#setopt checkwinsize # redraw window if changes size
# setopt transient_rprompt # only show the rprompt on the current prompt
# }}}

# Scripts and Functions
#setopt multios # perform implicit tees or cats when multiple redirections are attempted
# SMART URLS
# autoload -U url-quote-magic
# zle -N self-insert url-quote-magic

#}}}
# Bindings ZLE commands {{{1
# To see the key combo you want to use just do:
# Don't try to bind CTRL Q / CTRL S !!
# cat > /dev/null
# And press it

bindkey "^K"      kill-whole-line                      # ctrl-k
bindkey "^A"      beginning-of-line                    # ctrl-a
bindkey "^E"      end-of-line                          # ctrl-e
bindkey "[B"      history-search-forward               # down arrow
bindkey "[A"      history-search-backward              # up arrow
bindkey "^D"      delete-char                          # ctrl-d
bindkey "^F"      forward-char                         # ctrl-f
bindkey "^B"      backward-char                        # ctrl-b
# expand aliases, useful when running aliases in a sudo command
# http://www.math.cmu.edu/~gautam/sj/blog/20140625-zsh-expand-alias.html
# function expand-ealias()
# {
#     zle _expand_alias
# }
# zle -N expand-ealias
# my-expand() BUFFER=${(e)BUFFER} CURSOR=$#BUFFER
# zle -N my-expand
# bindkey '\e^E' my-expand
# bindkey "^F"   expand-alias

bindkey -v   # Default to standard vi bindings, regardless of editor string

zle -N edit-command-line

# Press ESC-v to edit current line in your favorite $editor
bindkey -M vicmd v edit-command-line
# bindkey '^V' edit-command-line
bindkey -r "^G" # was bound to list-expand I don't know where/why
# bindkey '^G' push-line-or-edit

bindkey '^P' up-history
bindkey '^N' down-history
# }}}
# Fancy CTRL Z {{{
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z
# }}}

# Look if zsh autosuggestions improve things
#autoload predict-on
#predict-on
autoload -Uz add-zsh-hook
autoload -z edit-command-line

# because I hate it
export PULUMI_SKIP_UPDATE_CHECK=1

# zmodload -i zsh/complist
zbell_ignore=($EDITOR $PAGER "man" "v" "gd" "gf")
zbell_duration=30
. "$ZDOTDIR/zbell.zsh"

# completion config {{{1

# autoload -U compinit && compinit

# Enable completion caching, use rehash to clear
zstyle ':completion::complete:*' use-cache on
zstyle ':completion::complete:*' cache-path "${XDG_CACHE_HOME:-~/.cache}/zsh/cache/$HOST"

# Fallback to built in ls colors
zstyle ':completion:*' list-colors ''

# Make the list prompt friendly
zstyle ':completion:*' list-prompt '%SAt %p: Hit TAB for more, or the character to insert%s'

# Make the selection prompt friendly when there are a lot of choices
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'

# Add simple colors to kill
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'

# list of completers to use
zstyle ':completion:*::::' completer _expand _complete _ignored _approximate

zstyle ':completion:*' menu select=1 _complete _ignored _approximate

# insert all expansions for expand completer
# zstyle ':completion:*:expand:*' tag-order all-expansions

# match uppercase from lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# offer indexes before parameters in subscripts
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

# formatting and messages
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
zstyle ':completion:*' group-name ''

# ignore completion functions (until the _ignored completer)
zstyle ':completion:*:functions' ignored-patterns '_*'
zstyle ':completion:*:scp:*' tag-order files users 'hosts:-host hosts:-domain:domain hosts:-ipaddr"IP\ Address *'
zstyle ':completion:*:scp:*' group-order files all-files users hosts-domain hosts-host hosts-ipaddr
zstyle ':completion:*:ssh:*' tag-order users 'hosts:-host hosts:-domain:domain hosts:-ipaddr"IP\ Address *'
zstyle ':completion:*:ssh:*' group-order hosts-domain hosts-host users hosts-ipaddr
zstyle '*' single-ignored show

#zstyle ':completion:*' rehash true
# tab completion for PIDs {{{2
zstyle ':completion:*:*:*:*:processes' command "ps -u `whoami` -o pid,user,comm,command -w -w"
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always
# }}}

# }}}


# Pour afficher la commande dans le titre du terminal
# https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/termsupport.zsh
# Prompt {{{
# if a process takeslonger than this, display its processing time
# we can't filter apps so it's quite annoying we disable it
# REPORTTIME=10
# delay to consider when changing vi mode
# in hundredths of seconds (0 defaults to 0.4 ?! 1 => 10 ms)
KEYTIMEOUT=1

# this code makes the prompt blink which is bad
# TRAPALRM is called every TMOUT, in our case it will reset the prompt
#http://stackoverflow.com/questions/2187829/constantly-updated-clock-in-zsh-prompt
#TMOUT=1

# TRAPALRM() {
    #zle reset-prompt
#}


# prompt called in case of error
SPROMPT="Correct $fg[red]%R$reset_color to $fg[green]%r$reset_color [(y)es (n)o (a)bort (e)dit]? "

#}}}

## use ctrl+t to toggle autosuggestions(hopefully this wont be needed as
## zsh-autosuggestions is designed to be unobtrusive)
#bindkey '^T' autosuggest-toggle

# _gnu_generic should work if program accepts --help
# this is superslow
# compdef _gnu_generic qutebrowser
# compdef _gnu_generic mptcpanalyzer
# compdef _gnu_generic jcli


# https://unix.stackexchange.com/questions/547/make-my-zsh-prompt-show-mode-in-vi-mode?noredirect=1&lq=1
# zle-keymap-select () {
#   case $KEYMAP in
#     vicmd) print -rn -- $terminfo[cvvis];; # block cursor
#     viins|main) print -rn -- $terminfo[cnorm];; # less visible cursor
#   esac
# }
# load terminfo for portable keybindings
# zmodload zsh/terminfo


# TODO pass a path that is versioned in home
teatimer() {
    sleep $1;
    mpv $HOME/home/data/audio/notif1.wav
    notify-send '!! Coffee Time - wake up !!';
    exit
}

# fzf config{{{
# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}
# }}}

# # To add support for TTYs this line can be optionally added.
# source ~/.cache/wal/colors-tty.sh
# TODO configure from HM module
if [[ -n $KITTY_INSTALLATION_DIR ]]; then
  export KITTY_SHELL_INTEGRATION="enabled"
#   autoload -Uz -- "$KITTY_INSTALLATION_DIR"/shell-integration/zsh/kitty-integration
#   kitty-integration
#   unfunction kitty-integration
fi

# this erases fzf so annoying
# source ~/.config/nova/zsh/zshrc
