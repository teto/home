#  vim: set noet fdm=manual fenc=utf-8 ff=unix sts=0 sw=4 ts=4 fdm=marker: 
##########################################
### MAIN 
##########################################
#


# font for window titles
# prefix with pango if you want to have fancy effects
font pango:Liberation Sans Mono 12
# font pango:FontAwesome 12


# xmodmap to see the mappings for ModX etc...
set $mod Mod1
set $rmod Mod1

#set $term rxvt-unicode
set $term termite

# 
# 
set $w1 1:
set $w2 2:
set $w3 3:
set $w4 4:qemu
set $w5 5:misc
set $w6 6:irc
set $w7 7
set $w8 8
set $w9 9


# workspace "$w1" output $output1
# workspace "$w2" output $output2
# workspace "$w3" output $output2
# workspace "$w4" output $output2
# workspace "$w4" output $output2
# workspace "$w9" output $output2


# default border size
#new_window  pixel 2
new_float pixel 2

#for_window [instance="audioplayer"] move to scratchpad
for_window [instance="pad_*"] move scratchpad
#for_window [instance="pad_flyingterminal"] move scratchpad
#for_window [instance="pad_flyingterminal"] move scratchpad
#for_window [instance="pad_ircclient"] move scratchpad
for_window [class="Navigator"] floating enable,border 1 pixel;
# this concerns too many boxes, thus creating bugs
for_window [class="Codeblocks" title="Global Variable Editor"] resize grow right 500;
for_window [class="Codeblocks" title="codeblocks"] resize grow left 300;
for_window [class="Codeblocks" title="Multiple matches"] resize grow right 300;

show_marks yes

focus_follows_mouse no
#workspace_bar no


# Manage monitors, enable or disable
bindsym $mod+Shift+V exec "$HOME/.i3/manage_monitors.sh"

# TODO should detect the number of monitors !
bindsym $mod+m  mode "monitors"
mode "monitors" {
	
	bindsym $mod+Left move workspace to output left
	bindsym $mod+Right move workspace to output right
	bindsym $mod+Up move workspace to output top
	bindsym $mod+Down move workspace to output down
                
	bindsym $mod+Shift+Left workspace prev_on_output
	bindsym $mod+Shift+Right workspace next_on_output

	bindsym Return mode "default"
	bindsym Escape mode "default"
}



mode "focused" {

                # hardcoded focus keybindings
                bindsym b [class="(?i)firefox"] focus; mode "default"
                bindsym w [class="(?i)terminal" title="weechat"] focus
                bindsym m [class="(?i)thunderbird"] focus
                bindsym f [class="(?i)terminal" title="mc"] focus
                bindsym z [class="(?i)zathura"] focus

                # keybindings for marking and jumping to clients
                bindsym a exec i3-input -F 'mark %s' -P 'Mark name: '
                bindsym g exec i3-input -F '[con_mark=%s] focus' -P 'Go to mark: '

                # Assign marks to keys 1-5
                bindsym Shift+1 mark mark1
                bindsym Shift+2 mark mark2
                bindsym Shift+3 mark mark3
                bindsym Shift+4 mark mark4
                bindsym Shift+5 mark mark5

               # Jump to clients marked 1-5
                bindsym 1 [con_mark="mark1"] focus
                bindsym 2 [con_mark="mark2"] focus
                bindsym 3 [con_mark="mark3"] focus
                bindsym 4 [con_mark="mark4"] focus
                bindsym 5 [con_mark="mark5"] focus

                # Exit to the default mode
                bindsym Return mode "default"
                bindsym Escape mode "default"
}

bindsym $mod+shift+s sticky toggle

# TODO remove since it is used by Dunst ?
bindsym $mod+n mode "focused"
#bindsym $mod+c exec "~/.i3/misc_commands.py"
bindsym $mod+t exec floating toggle
#bindsym XF86AudioRaiseVolume exec "amixer -q set Master 2dB+ unmute; notify-send Audio Raised volume"
#bindsym XF86AudioLowerVolume exec "amixer -q set Master 2dB- unmute; notify-send Audio lowered"
#bindsym XF86AudioMute exec "amixer -q set Master toggle"



workspace_auto_back_and_forth yes
# Go into hibernation
#bindsym Mod4+Shift+F9 exec sudo hibernate -F /etc/hibernate/tuxonice.conf

# The IPC interface allows programs like an external workspace bar
# (i3-wsbar) or i3-msg (can be used to "remote-control" i3) to work.
# ipc-socket $XDG_RUNTIME_DIR/i3/ipc.sock



# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec --no-startup-id $term
bindsym $mod+Shift+Return exec --no-startup-id ~/.i3/fork_term.sh
#i3-sensible-terminal

# Use mod-Control-Up and Down to rotate through the workspace list.





# kill focused window
bindsym $mod+Shift+A kill

# start dmenu (a program launcher)
bindsym $mod+Tab exec "rofi -modi 'run,DRun,window,ssh' -show run"
#bindsym $mod+eacute exec j4-dmenu-desktop --dmenu='rofi -modi "run,ssh,dmenu" -dmenu'
#dmenu_run -
bindsym $mod+eacute i3-list-windows

no_focus [class="^qutebrowser"]

#for_window [title="MOC"] move scratchpad
#for_window [Class="^Transmission"] floating enable
#bindsym $mod+F1 [instance="pad_(?!flyingterminal)"] move scratchpad; [instance="pad_flyingterminal"] scratchpad show
#bindsym $mod+F2 [instance="pad_(?!audioplayer)"] move scratchpad ; [instance="pad_audioplayer"] scratchpad show
#bindsym $mod+F3 [instance="pad_(?!ncmpcpp)"] move scratchpad; [instance="pad_ncmpcpp"] scratchpad show
bindsym $mod+F1 [con_mark="pad_1"] scratchpad show
bindsym $mod+F2 [instance="pad_(?!audioplayer)"] move scratchpad ; [instance="pad_audioplayer"] scratchpad show
bindsym $mod+F3 [instance="pad_(?!ncmpcpp)"] move scratchpad; [instance="pad_ncmpcpp"] scratchpad show

#pad_audioplayer
# class followed by command
#bindsym $mod+w exec python ~/.i3/runorfocus.py "Firefox" firefox


bindsym $mod+oe exec /home/teto/i3-easyfocus/i3-easyfocus

bindsym $mod+shift+e exec /home/teto/i3-easyfocus/i3-easyfocus

# This may be slow since script involves a few steps
# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left  exec /home/teto/bin/i3dispatch left
bindsym $mod+Down  exec /home/teto/bin/i3dispatch down
bindsym $mod+Up    exec /home/teto/bin/i3dispatch up
bindsym $mod+Right exec /home/teto/bin/i3dispatch right

# This may be slow since script involves a few steps
# change focus
#bindsym $mod+h exec ~/.i3//home/teto/i3dispatch/i3dispatch.py left
#bindsym $mod+j exec ~/.i3//home/teto/i3dispatch/i3dispatch.py down
#bindsym $mod+k exec ~/.i3//home/teto/i3dispatch/i3dispatch.py up
#bindsym $mod+l exec ~/.i3//home/teto/i3dispatch/i3dispatch.py right

## alternatively, you can use the cursor keys:
#bindsym $mod+Left exec ~/.i3//home/teto/i3dispatch/i3dispatch.py left
#bindsym $mod+Down exec ~/.i3//home/teto/i3dispatch/i3dispatch.py down
#bindsym $mod+Up   exec ~/.i3//home/teto/i3dispatch/i3dispatch.py up
#bindsym $mod+Right exec ~/.i3//home/teto/i3dispatch/i3dispatch.py right

# move focused window
bindsym $mod+Shift+J move left
bindsym $mod+Shift+K move down
bindsym $mod+Shift+L move up
bindsym $mod+Shift+M move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
# needs i3next
bindsym $mod+v split toggle 

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen
bindsym $mod+Shift+f fullscreen global

# change container layout (stacked, tabbed, default)
bindsym $mod+ampersand layout toggle
#bindsym $mod+s layout stacking
#bindsym $mod+z layout tabbed
#bindsym $mod+e layout default

# to lock screen
bindsym $mod+Ctrl+L exec "i3lock -i ~/Images/route66.png"

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle


mode "programs" {

    bindsym q exec "qutebrowser"; mode default
    bindsym f exec "firefox"; mode default
    bindsym c exec "codeblocks"; mode default
    bindsym m exec "mendeleydesktop"; mode default
    bindsym n exec "nemo"; mode default
    bindsym w exec "wireshark"; mode default
    bindsym z exec "zathura"; mode default

# set monitors, wap them ? etc..
    bindsym $mod+apostrophe mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

            

# focus the parent container
bindsym $mod+p focus parent
bindsym $mod+quotedbl  focus child
#bindsym $mod+quotedbl workspace "$w3"
bindsym $mod+apostrophe mode "programs"

#bindsym $mod+q exec nemo

# focus the child container

# switch to workspace
#bindsym $mod+ampersand workspace "$w1"
#bindsym $mod+eacute workspace "$w2"
#bindsym $mod+quotedbl workspace "$w3"
#bindsym $mod+apostrophe workspace "$w4"
#bindsym $mod+parenleft workspace "$w5"
#bindsym $mod+minus workspace 6
#bindsym $mod+egrave workspace 7
#bindsym $mod+underscore workspace 8
#bindsym $mod+ccedilla workspace 9
#bindsym $mod+agrave workspace 10
bindsym $mod+a workspace "$w1"
bindsym $mod+z workspace "$w2"
bindsym $mod+e workspace "$w3"
bindsym $rmod+q workspace "$w4"
bindsym $rmod+s workspace "$w5"
bindsym $mod+d workspace "$w6"
bindsym $mod+w workspace "$w7"
bindsym $mod+x workspace "$w8"
bindsym $mod+c workspace "$w9"
#bindsym $mod+x workspace 10

for_window [con_mark="^pad_*"] move scratchpad

# move to scratchpad
bindsym $mod+Shift+F1 mark "pad_1"
bindsym $mod+Shift+F2 floating toggle
bindsym $mod+Shift+F3 move container to workspace "$w3"
bindsym $mod+Shift+F4 move container to workspace "$w4"

# move focused container to workspace {{{
bindsym $mod+Shift+1 move container to workspace "$w1"
bindsym $mod+Shift+2 move container to workspace "$w2" 
bindsym $mod+Shift+3 move container to workspace "$w3"
bindsym $mod+Shift+4 move container to workspace "$w4"
bindsym $mod+Shift+5 move container to workspace "$w5"
bindsym $mod+Shift+6 move container to workspace "$w6"
bindsym $mod+Shift+7 move container to workspace "$w7"
bindsym $mod+Shift+8 move container to workspace "$w8"
bindsym $mod+Shift+9 move container to workspace "$w9"
bindsym $mod+Shift+0 move container to workspace "$w10"
# }}}

# reload the configuration file
bindsym $mod+Shift+C  reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+R exec "$HOME/.i3/build_config.sh"; restart
# exit i3 (logs you out of your X session)
# command is 'exit'
# bindsym $mod+Shift+E exec "$HOME/.i3/logout.py"


mode "command" {

	bindsym f exec "$HOME/.i3/script.sh fn_keys"; mode default
	bindsym t exec "$HOME/.i3/script.sh touchpad"; mode default

# set monitors, wap them ? etc..

	bindsym Return mode "default"
	bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that) {{{
bindsym $mod+r mode "resize"
mode "resize" {
        
       # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize grow left 10 px or 10 ppt
        bindsym Shift+j resize shrink left 10 px or 10 ppt

        bindsym k resize grow up  10 px or 10 ppt
        bindsym Shift+k resize shrink up 10 px or 10 ppt

        bindsym l resize grow down 10 px or 10 ppt
        bindsym Shift+l resize shrink down 10 px or 10 ppt

        bindsym m resize grow right 10 px or 10 ppt
        bindsym Shift+m resize shrink right 10 px or 10 ppt

        # same bindings, but for the arrow keys
        #bindsym Right resize shrink width 10 px or 10 ppt
        #bindsym Up resize grow height 10 px or 10 ppt
        #bindsym Down resize shrink height 10 px or 10 ppt
        #bindsym Left resize grow width 10 px or 10 ppt
        bindsym Left resize grow left 10 px or 10 ppt
        bindsym Shift+Left resize shrink left 10 px or 10 ppt        

        bindsym Up resize shrink up  10 px or 10 ppt
        bindsym Shift+Up resize grow up 10 px or 10 ppt

        bindsym Down resize grow down 10 px or 10 ppt
        bindsym Shift+Down resize shrink down 10 px or 10 ppt

        bindsym Right resize grow right 10 px or 10 ppt
        bindsym Shift+Right resize shrink right 10 px or 10 ppt



	# back to normal: Enter or Escape
        bindsym $mod+r mode "default"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# }}}



#bindsym $mod+w exec "~/.i3/choose_wallpaper.sh"

bindsym $mod+shift+b border toggle
bindsym $mod+ctrl+minus move scratchpad
#
#

set_from_resource $foc_border i3bar.foc_border #d72f6b
set_from_resource $foc_border_bg i3bar.foc_border_bg #d70a53
set_from_resource $bar_bg i3bar.background #090e1400 
set_from_resource $bar_status i3bar.statusline #d70a53

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available) {{{
# Toggle between hide state and show state
# bindsym $mod+m bar hidden_state toggle
bar {
	position top
	strip_workspace_numbers 1
	id 0
	i3bar_command i3bar -t
	status_command python3 /home/teto/.i3/myStatus.py
	# separator_symbol "|"
	# font pango: Liberation Sans Mono 9,  FontAwesome 12

	#output $output2
	verbose 1
#	tray_output $output15
    colors {
        background $bar_bg
        statusline $bar_status
# #ffffff
		# focused_statusline #090e1400
		# focused_background #090e1400

        # class            border  backgrd text
        focused_workspace  $foc_border $foc_border_bg #FFFF50
        active_workspace   #06090d #06090d #696f89
        inactive_workspace #06090d #06090d #696f89
        urgent_workspace   #d72f6b #d70a53 #FFFF50
		binding_mode       #rrrrrr #rrffrr #ffffff
    }
}
# }}}

bindsym $mod+shift+q exec qutebrowser
bindsym $mod+shift+n exec nemo
bindsym $mod+shift+p mode mouse


mode mouse {

#xdotool mousemove --sync 1000 10
#xdotool click 3
#sleep 1
#
	bindsym $mod+Left exec	$(xdotool mousemove_relative --sync -- -15 0)
	bindsym $mod+Right exec $(xdotool mousemove_relative --sync -- 15 0)
	bindsym $mod+Down exec  $(xdotool mousemove_relative --sync -- 0 15)
	bindsym $mod+Up   exec  $(xdotool mousemove_relative --sync -- 0 -15)
#xdotool click 1
	bindsym Escape mode "default"
}

no_focus [window_role="pop-up"]

floating_minimum_size 75 x 50
floating_maximum_size -1 x -1

### TODO need to run urxvtd beforehand
### display error in case it does not launch
# Provide command to send to a specific scratchpad (rename title) or use mark ?
#
#exec_always urxvtc -name pad_audioplayer -e "mocp; $SHELL"; 
#exec_always urxvtc -name pad_flyingterminal
#exec_always urxvtc -name pad_ncmpcpp -e sh ncmpcpp;$SHELL 
#exec_always urxvtc -name pad_term4
#exec_always urxvtc -name pad_term5

# DP3 & LVDS1
# to move
# TODO ca ca plante si j'en ai 
bindsym XF86Display exec ~/.i3/monitors.sh

#exec_always xrandr --output $output1 --auto --output $output2 --right-of $output1

#exec urxvtc -name irclient -e irssi


exec_always xmodmap ~/.Xmodmap
#https://faq.i3wm.org/question/2155/how-can-i-use-autostart-desktop-files-in-i3/
# exec dex -ae i3
