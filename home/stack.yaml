# see https://docs.haskellstack.org/en/stable/nix_integration/#configuration
# for configuration options
nix:
  enable: true

# `pure` set to `true` means that environment variables won't get forwarded
# when running `stack build` and `stack exec`.  This is generally not what
# we want when doing day-to-day development.
  # true by default but will cause problems such as https://github.com/jaspervdj/hakyll/issues/614
  pure: false

# These are packages passed to the nix environment when running `stack
# build` or `stack exec`.  Note that `stack` will NOT be able to see a
# library that has not been passed in here.
  packages:
      - sassc
      - zlib # zlib for hakyll


# Unset by default. You cannot set this option if `packages:`
  # is already present and not empty.
  # shell-file: shell.nix

  # A list of strings, empty by default. Additional options that
  # will be passed verbatim to the `nix-shell` command.
  nix-shell-options: []

  # A list of strings, empty by default, such as
  # `[nixpkgs=/my/local/nixpkgs/clone]` that will be used to override
  # NIX_PATH.
  # path: []

  # false by default. Whether to add your nix dependencies as nix garbage
  # collection roots. This way, calling nix-collect-garbage will not remove
  # those packages from the nix store, saving you some time when running
  # stack build again with nix support activated.
  # This creates a `nix-gc-symlinks` directory in the project `.stack-work`.
  # To revert that, just delete this `nix-gc-symlinks` directory.
  add-gc-roots: false
